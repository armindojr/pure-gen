"use strict";(self.webpackChunkpure_gen=self.webpackChunkpure_gen||[]).push([[911],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return k}});var r=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=r.createContext({}),o=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=o(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=o(a),k=l,N=u["".concat(s,".").concat(k)]||u[k]||m[k]||n;return a?r.createElement(N,i(i({ref:t},d),{},{components:a})):r.createElement(N,i({ref:t},d))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var o=2;o<n;o++)i[o]=a[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4199:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return d},default:function(){return u}});var r=a(7462),l=a(3366),n=(a(7294),a(3905)),i=["components"],p={id:"address",title:"Pure Address Method",sidebar_label:"Address",slug:"pure/address"},s="address",o={unversionedId:"api/address",id:"api/address",title:"Pure Address Method",description:"zipCode",source:"@site/docs/api/address.md",sourceDirName:"api",slug:"/api/pure/address",permalink:"/pure-gen/api/pure/address",editUrl:"https://github.com/armindojr/pure-gen/edit/new-docs/docs/api/address.md",tags:[],version:"current",frontMatter:{id:"address",title:"Pure Address Method",sidebar_label:"Address",slug:"pure/address"},sidebar:"mySidebar",previous:{title:"Pure",permalink:"/pure-gen/api/pure"},next:{title:"Commerce",permalink:"/pure-gen/api/pure/commerce"}},d=[{value:"zipCode",id:"zipcode",children:[{value:"Description",id:"description",children:[],level:4},{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Usage",id:"usage",children:[],level:4}],level:2},{value:"zipCodeByState",id:"zipcodebystate",children:[{value:"Description",id:"description-1",children:[],level:4},{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Usage",id:"usage-1",children:[],level:4}],level:2},{value:"city",id:"city",children:[{value:"Description",id:"description-2",children:[],level:4},{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Usage",id:"usage-2",children:[],level:4}],level:2},{value:"cityPrefix",id:"cityprefix",children:[{value:"Description",id:"description-3",children:[],level:4},{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Usage",id:"usage-3",children:[],level:4}],level:2},{value:"citySuffix",id:"citysuffix",children:[{value:"Description",id:"description-4",children:[],level:4},{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Usage",id:"usage-4",children:[],level:4}],level:2},{value:"cityName",id:"cityname",children:[{value:"Description",id:"description-5",children:[],level:4},{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Usage",id:"usage-5",children:[],level:4}],level:2},{value:"streetName",id:"streetname",children:[{value:"Description",id:"description-6",children:[],level:4},{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Usage",id:"usage-6",children:[],level:4}],level:2},{value:"streetAddress",id:"streetaddress",children:[{value:"Description",id:"description-7",children:[],level:4},{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Usage",id:"usage-7",children:[],level:4}],level:2},{value:"streetSuffix",id:"streetsuffix",children:[{value:"Description",id:"description-8",children:[],level:4},{value:"Parameters",id:"parameters-8",children:[],level:4},{value:"Returns",id:"returns-8",children:[],level:4},{value:"Usage",id:"usage-8",children:[],level:4}],level:2},{value:"streetPrefix",id:"streetprefix",children:[{value:"Description",id:"description-9",children:[],level:4},{value:"Parameters",id:"parameters-9",children:[],level:4},{value:"Returns",id:"returns-9",children:[],level:4},{value:"Usage",id:"usage-9",children:[],level:4}],level:2},{value:"secondaryAddress",id:"secondaryaddress",children:[{value:"Description",id:"description-10",children:[],level:4},{value:"Parameters",id:"parameters-10",children:[],level:4},{value:"Returns",id:"returns-10",children:[],level:4},{value:"Usage",id:"usage-10",children:[],level:4}],level:2},{value:"county",id:"county",children:[{value:"Description",id:"description-11",children:[],level:4},{value:"Parameters",id:"parameters-11",children:[],level:4},{value:"Returns",id:"returns-11",children:[],level:4},{value:"Usage",id:"usage-11",children:[],level:4}],level:2},{value:"country",id:"country",children:[{value:"Description",id:"description-12",children:[],level:4},{value:"Parameters",id:"parameters-12",children:[],level:4},{value:"Returns",id:"returns-12",children:[],level:4},{value:"Usage",id:"usage-12",children:[],level:4}],level:2},{value:"defaultCountry",id:"defaultcountry",children:[{value:"Description",id:"description-13",children:[],level:4},{value:"Parameters",id:"parameters-13",children:[],level:4},{value:"Returns",id:"returns-13",children:[],level:4},{value:"Usage",id:"usage-13",children:[],level:4}],level:2},{value:"countryCode",id:"countrycode",children:[{value:"Description",id:"description-14",children:[],level:4},{value:"Parameters",id:"parameters-14",children:[],level:4},{value:"Returns",id:"returns-14",children:[],level:4},{value:"Usage",id:"usage-14",children:[],level:4}],level:2},{value:"state",id:"state",children:[{value:"Description",id:"description-15",children:[],level:4},{value:"Parameters",id:"parameters-15",children:[],level:4},{value:"Returns",id:"returns-15",children:[],level:4},{value:"Usage",id:"usage-15",children:[],level:4}],level:2},{value:"stateAbbr",id:"stateabbr",children:[{value:"Description",id:"description-16",children:[],level:4},{value:"Parameters",id:"parameters-16",children:[],level:4},{value:"Returns",id:"returns-16",children:[],level:4},{value:"Usage",id:"usage-16",children:[],level:4}],level:2},{value:"latitude",id:"latitude",children:[{value:"Description",id:"description-17",children:[],level:4},{value:"Parameters",id:"parameters-17",children:[],level:4},{value:"Returns",id:"returns-17",children:[],level:4},{value:"Usage",id:"usage-17",children:[],level:4}],level:2},{value:"longitude",id:"longitude",children:[{value:"Description",id:"description-18",children:[],level:4},{value:"Parameters",id:"parameters-18",children:[],level:4},{value:"Returns",id:"returns-18",children:[],level:4},{value:"Usage",id:"usage-18",children:[],level:4}],level:2},{value:"direction",id:"direction",children:[{value:"Description",id:"description-19",children:[],level:4},{value:"Parameters",id:"parameters-19",children:[],level:4},{value:"Returns",id:"returns-19",children:[],level:4},{value:"Usage",id:"usage-19",children:[],level:4}],level:2},{value:"cardinalDirection",id:"cardinaldirection",children:[{value:"Description",id:"description-20",children:[],level:4},{value:"Parameters",id:"parameters-20",children:[],level:4},{value:"Returns",id:"returns-20",children:[],level:4},{value:"Usage",id:"usage-20",children:[],level:4}],level:2},{value:"ordinalDirection",id:"ordinaldirection",children:[{value:"Description",id:"description-21",children:[],level:4},{value:"Parameters",id:"parameters-21",children:[],level:4},{value:"Returns",id:"returns-21",children:[],level:4},{value:"Usage",id:"usage-21",children:[],level:4}],level:2},{value:"nearbyGPSCoordinate",id:"nearbygpscoordinate",children:[{value:"Description",id:"description-22",children:[],level:4},{value:"Parameters",id:"parameters-22",children:[],level:4},{value:"Returns",id:"returns-22",children:[],level:4},{value:"Usage",id:"usage-22",children:[],level:4}],level:2},{value:"timeZone",id:"timezone",children:[{value:"Description",id:"description-23",children:[],level:4},{value:"Parameters",id:"parameters-23",children:[],level:4},{value:"Returns",id:"returns-23",children:[],level:4},{value:"Usage",id:"usage-23",children:[],level:4}],level:2}],m={toc:d};function u(e){var t=e.components,a=(0,l.Z)(e,i);return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"address"},"address"),(0,n.kt)("h2",{id:"zipcode"},"zipCode"),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"Method that generate random zipcode from format. If format is not specified, the locale's zip format is used."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"format"),(0,n.kt)("td",{parentName:"tr",align:null},"<String",">"),(0,n.kt)("td",{parentName:"tr",align:null},"What format to use when generate zipCode. Default value is locale format")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.zipCode());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'93001'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an zip code using ",(0,n.kt)("inlineCode",{parentName:"p"},"###-##.###")," as template"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.zipCode('###-##.###'));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'868-80.346'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"zipcodebystate"},"zipCodeByState"),(0,n.kt)("h4",{id:"description-1"},"Description"),(0,n.kt)("p",null,"Method that generates random zipcode from state abbreviation. If state abbreviation is not specified, a random zip code is generated according to the locale's zip format. Only works for locales with postcode_by_state definition. If a locale does not have a postcode_by_state definition, a random zip code is generated according to the locale's zip format."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"state"),(0,n.kt)("td",{parentName:"tr",align:null},"<String",">"),(0,n.kt)("td",{parentName:"tr",align:null},"State used to format zipCode. Default is random zipCode from locale")))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-1"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.zipCodeByState());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'70563'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an zip code from California, USA"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"pure.setLocale('en_US');\nconsole.log(pure.address.zipCodeByState('CA'));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'91357'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"city"},"city"),(0,n.kt)("h4",{id:"description-2"},"Description"),(0,n.kt)("p",null,"Method that generates a random city name based on locale definitions. If the locale you selected has a list separated by state, you can filter the result by passing what state you want as parameter."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"state"),(0,n.kt)("td",{parentName:"tr",align:null},"<String",">"),(0,n.kt)("td",{parentName:"tr",align:null},"You can filter by state name. Default value is random")))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-2"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.city());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'San Rafael'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an city from 'Alabama'"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.city('Alabama'));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Tuscumbia'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"cityprefix"},"cityPrefix"),(0,n.kt)("h4",{id:"description-3"},"Description"),(0,n.kt)("p",null,"Method that generate random localized city prefix"),(0,n.kt)("h4",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-3"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.cityPrefix());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Port'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"citysuffix"},"citySuffix"),(0,n.kt)("h4",{id:"description-4"},"Description"),(0,n.kt)("p",null,"Method that generate random localized city suffix"),(0,n.kt)("h4",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-4"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.citySuffix());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'chester'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"cityname"},"cityName"),(0,n.kt)("h4",{id:"description-5"},"Description"),(0,n.kt)("p",null,"Method that generate random localized city name"),(0,n.kt)("h4",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-5"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"pure.setLocale('pt_PT');\nconsole.log(pure.address.cityName());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Leiria'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"streetname"},"streetName"),(0,n.kt)("h4",{id:"description-6"},"Description"),(0,n.kt)("p",null,"Method that generate random street name"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-6"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-6"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.streetName());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Botsford Mills'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"streetaddress"},"streetAddress"),(0,n.kt)("h4",{id:"description-7"},"Description"),(0,n.kt)("p",null,"Method that generate random localized street address"),(0,n.kt)("h4",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-7"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-7"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.streetAddress());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'45282 Metz Streets'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"streetsuffix"},"streetSuffix"),(0,n.kt)("h4",{id:"description-8"},"Description"),(0,n.kt)("p",null,"Method that generate random localized street suffix"),(0,n.kt)("h4",{id:"parameters-8"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-8"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-8"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.streetSuffix());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Overpass'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"streetprefix"},"streetPrefix"),(0,n.kt)("h4",{id:"description-9"},"Description"),(0,n.kt)("p",null,"Method that generate random localized street prefix"),(0,n.kt)("h4",{id:"parameters-9"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-9"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-9"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"pure.setLocale('pt_PT');\nconsole.log(pure.address.streetPrefix());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Acesso'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"secondaryaddress"},"secondaryAddress"),(0,n.kt)("h4",{id:"description-10"},"Description"),(0,n.kt)("p",null,"Method that generate random secondary address"),(0,n.kt)("h4",{id:"parameters-10"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-10"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-10"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.secondaryAddress());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Apt. 110'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"county"},"county"),(0,n.kt)("h4",{id:"description-11"},"Description"),(0,n.kt)("p",null,"Method that generate random localized county"),(0,n.kt)("h4",{id:"parameters-11"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-11"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-11"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.county());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Bedfordshire'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"country"},"country"),(0,n.kt)("h4",{id:"description-12"},"Description"),(0,n.kt)("p",null,"Method that generate random localized country"),(0,n.kt)("h4",{id:"parameters-12"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-12"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-12"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.country());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Philippines'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"defaultcountry"},"defaultCountry"),(0,n.kt)("h4",{id:"description-13"},"Description"),(0,n.kt)("p",null,"Method that generate random localized default country"),(0,n.kt)("h4",{id:"parameters-13"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-13"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-13"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.defaultCountry());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'United States of America'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"countrycode"},"countryCode"),(0,n.kt)("h4",{id:"description-14"},"Description"),(0,n.kt)("p",null,"Method that generate random localized country code"),(0,n.kt)("h4",{id:"parameters-14"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-14"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-14"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.countryCode());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'GN'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"state"},"state"),(0,n.kt)("h4",{id:"description-15"},"Description"),(0,n.kt)("p",null,"Method that generate random localized state"),(0,n.kt)("h4",{id:"parameters-15"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-15"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-15"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.state());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'South Dakota'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"stateabbr"},"stateAbbr"),(0,n.kt)("h4",{id:"description-16"},"Description"),(0,n.kt)("p",null,"Method that generate random localized state abbreviation"),(0,n.kt)("h4",{id:"parameters-16"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-16"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-16"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.stateAbbr());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'SD'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"latitude"},"latitude"),(0,n.kt)("h4",{id:"description-17"},"Description"),(0,n.kt)("p",null,"Method that generate random latitude respecting parameters"),(0,n.kt)("h4",{id:"parameters-17"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},"<Object",">"),(0,n.kt)("td",{parentName:"tr",align:null},"You can pass parameters as this object properties")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.min"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Min number to be generated. Default value is -90")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.max"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Max number to be generated. Default value is 90")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.precision"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Floating point precision to be used, if value is 0 then no floating point is generated. Default value is 4")))),(0,n.kt)("h4",{id:"returns-17"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-17"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.latitude());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'16.3386'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an latitude between ",(0,n.kt)("inlineCode",{parentName:"p"},"-8")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"10")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"4")," floating point precision"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.latitude({ min: -8, max: 10, precision: 4 }));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'9.2941'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"longitude"},"longitude"),(0,n.kt)("h4",{id:"description-18"},"Description"),(0,n.kt)("p",null,"Method that generate random longitude respecting parameters"),(0,n.kt)("h4",{id:"parameters-18"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},"<Object",">"),(0,n.kt)("td",{parentName:"tr",align:null},"You can pass parameters as this object properties")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.min"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Min number to be generated. Default value is -180")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.max"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Max number to be generated. Default value is 180")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.precision"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Floating point precision to be used, if value is 0 then no floating point is generated. Default value is 4")))),(0,n.kt)("h4",{id:"returns-18"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-18"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.longitude());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'154.4644'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an longitude between ",(0,n.kt)("inlineCode",{parentName:"p"},"-100")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"90")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"4")," floating point precision"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.longitude({ min: -100, max: 90, precision: 4 }));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'-59.8514'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"direction"},"direction"),(0,n.kt)("h4",{id:"description-19"},"Description"),(0,n.kt)("p",null,"Method that generate random direction"),(0,n.kt)("h4",{id:"parameters-19"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"useAbbr"),(0,n.kt)("td",{parentName:"tr",align:null},"<Boolean",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Use or not abbreviation when generating direction. Default value is false")))),(0,n.kt)("h4",{id:"returns-19"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-19"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.direction());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Southeast'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an direction abbreviated"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.direction(true));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'NW'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"cardinaldirection"},"cardinalDirection"),(0,n.kt)("h4",{id:"description-20"},"Description"),(0,n.kt)("p",null,"Method that generate random cardinal direction"),(0,n.kt)("h4",{id:"parameters-20"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"useAbbr"),(0,n.kt)("td",{parentName:"tr",align:null},"<Boolean",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Use or not abbreviation when generating direction. Default value is false")))),(0,n.kt)("h4",{id:"returns-20"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-20"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.cardinalDirection());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'East'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an cardinal direction abbreviated"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.cardinalDirection(true));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'N'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"ordinaldirection"},"ordinalDirection"),(0,n.kt)("h4",{id:"description-21"},"Description"),(0,n.kt)("p",null,"Method that generate random ordinal direction"),(0,n.kt)("h4",{id:"parameters-21"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"useAbbr"),(0,n.kt)("td",{parentName:"tr",align:null},"<Boolean",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Use or not abbreviation when generating direction. Default value is false")))),(0,n.kt)("h4",{id:"returns-21"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-21"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.ordinalDirection());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Northwest'\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an ordinal direction abbreviated"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.ordinalDirection(true));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'SE'\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"nearbygpscoordinate"},"nearbyGPSCoordinate"),(0,n.kt)("h4",{id:"description-22"},"Description"),(0,n.kt)("p",null,"Method that generate random nearby GPS coordinate respecting parameters"),(0,n.kt)("h4",{id:"parameters-22"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},"<Object",">"),(0,n.kt)("td",{parentName:"tr",align:null},"You can pass parameters as this object properties")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.coordinate"),(0,n.kt)("td",{parentName:"tr",align:null},"<Array",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Array with latitude and longitude used as base. Default value is random")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.radius"),(0,n.kt)("td",{parentName:"tr",align:null},"<Number",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Max distance in KM between base coordinate that can be generated. Default value is 10.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.isMetric"),(0,n.kt)("td",{parentName:"tr",align:null},"<Boolean",">"),(0,n.kt)("td",{parentName:"tr",align:null},"Declare if radius passed is metric or imperial. Default value is false")))),(0,n.kt)("h4",{id:"returns-22"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<Array",">"))),(0,n.kt)("h4",{id:"usage-22"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Without passing parameters"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.nearbyGPSCoordinate());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"[ '12.2727', '-22.5733' ]\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Describing that i want an nearby coordinate using ",(0,n.kt)("inlineCode",{parentName:"p"},"-23.561414")," as latitude and ",(0,n.kt)("inlineCode",{parentName:"p"},"-46.6558819")," as longitude with ",(0,n.kt)("inlineCode",{parentName:"p"},"4")," as distance"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.nearbyGPSCoordinate({ coordinate: [ '-23.561414', '-46.6558819' ], radius: 4, isMetric: true }));\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"[ '-23.5969', '-46.6619' ]\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"timezone"},"timeZone"),(0,n.kt)("h4",{id:"description-23"},"Description"),(0,n.kt)("p",null,"Method that generate random time zone"),(0,n.kt)("h4",{id:"parameters-23"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"This method doesn't receive any parameters")))),(0,n.kt)("h4",{id:"returns-23"},"Returns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"<String",">"))),(0,n.kt)("h4",{id:"usage-23"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Without passing parameters",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"code"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"console.log(pure.address.timeZone());\n")),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"result"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"'Pacific/Auckland'\n")))),(0,n.kt)("hr",null))}u.isMDXComponent=!0}}]);